/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.evotedapp.biznet

abstract participant User {
  o String name
  o String nic
  o String email
  o String password // sanitize and encrypt 
  o Integer mobileNumber
} 

transaction changePassword {
  --> User user
  o String newPass
}

event changePasswordNotification {
  --> User user
}


participant Admin identified by adminId extends Voter {
  o String adminId
  o Boolean hasVerified default = false
}

transaction verifyAdmin {
  --> Admin admin
}

event verifyAdminNotification {
  --> Admin admin
}




participant Voter identified by voterId extends User{
  o String voterId
  --> PollingStation pollingStation
  o Boolean isEligible default = true
  --> Election[] votedElections
  o Boolean hasVoted default = false
}

transaction verifyEligibility {
  --> Voter voter
}

event verifyEligibilityNotification {
  --> Voter voter
}


transaction verifyHasVoted {
  --> Voter voter
  --> Election currentElection
}

event verifyHasVotedNotification {
  --> Voter voter
}

transaction addVotedElection {
  --> Voter voter
  --> Election newElection
}

event addVotedElectionNotification {
  --> Voter voter
}

participant Politician identified by politicianId extends Voter{
  o String politicianId
  --> Party party
  o String role
  o Integer officeContact
  o String officeAddress
  --> Division electoralDivision
  o String bio
  o Boolean hasVerified default = false
}

transaction changeRole {
  --> Voter voter
}

event changeRoleNotification {
  --> Voter voter
}


transaction verifyPolitician {
  --> Politician politician
}

event verifyPoliticianNotification {
  --> Politician politician
}

asset PreferencialVoteNumber identified by preferencialVoteNumberId {
  o String preferencialVoteNumberId
  --> Election election
  o Integer preferentialVoteNumber
  --> Party party
  --> Politician politician
  --> Division division
}
asset Election identified by electionId {
  o String electionId
  o String name
  o String type
  o DateTime startDateTime
  o DateTime endDateTime
  --> Party[] parties
  --> Politician[] candidates
  --> Voter[] ineligibleVoters

}

asset VoteCountParty identified by voteCountPartyId {
  o String voteCountPartyId
  --> Election election
  --> Party party
  o Integer voteCount
}

asset VoteCountCandidate identified by voteCountCandidateId {
  o String voteCountCandidateId
  --> Election election
  --> Politician candidate
  o Integer voteCount
}

asset Ballot identified by ballotId {
  o String ballotId
  // --> Voter voter
  // --> Party votedParty
  // --> Politician[] votedCandidates
  o String votedParty // Encrypted
  o String votedCandidates // Encrypted
  o DateTime timeStamp
  o BallotStatus balStatus default="New"
}

asset Party identified by partyId {
  o String partyId
  o String name
  --> Politician leader
  o String officeAddress
  o Integer contactNumber
  o String Image
  --> Politician[] members
  o String officialWeb
  o String description
}

asset PollingStation identified by pollingStationId {
  o String pollingStationId
  o String name
  o String location
  --> Division electoralDivision
}

asset Division identified by divisionId {
  o String divisionId
  o String name
  o String district
  o String province
}

enum BallotStatus {
  o New
  o Encrypted
  o Casted
  o Counted
}

transaction VoteTransaction {
  --> Ballot ballot
  --> Voter voter
}

event VoteNotification {
  --> Ballot ballot
}